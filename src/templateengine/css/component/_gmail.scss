/**
  Components:
    LabelList
    MessageList
    Message
    Authorization
*/
cs-component.labellist .list,
cs-component.messagelist > .list {
  list-style: none;
  margin: 0;
  padding: 0;

  .list-item {
    cursor: pointer;
  }
}

// Component: Label List
cs-component.labellist {
  label {
    display: inline-block;
  }

  input[type="checkbox"] {
    z-index: -1;
    position: absolute;
    visibility: hidden;
  }

  .list-item {
    font-size: smaller;

    &:hover {
      background-color: silver;
    }
  }

  .selected {
    color: #dd4b39;
  }
}

@include media($phone) {
  cs-component.labellist.phone-burger {
    label {
      display: inline-block;
      margin: 6px;

      &::before {
        @include transform(translateY(-50%));
        content: attr(label);
        left: 0;
        position: absolute;
        width: 100%;
        text-align: center;
        top: 50%;
      }
    }

    svg {
      display: inline-block;
      fill: currentColor;
      height: 100%;
      max-height: 100%;
    }

    .list {
      display: none;
    }

    .list-item {
      border-top: rem(1) solid #bdbdbd;
      padding-top: rem(16);
    }

    input[type="checkbox"]:checked + label > .list {
      display: block;
      position: fixed;
      left: 0;
      top: 32px;
      bottom: 0;
      width: 100%;
      background-color: rgba(0,0,0,0.1);
    }
  }
}

// Component: Message List
cs-component.messagelist {
  > .list {
    height: inherit;

    &.loading::before {
      @include transform(translateX(-50%));
      background-color: #f9edbe;
      border: rem(1) solid #f0c36d;
      border-radius: rem(2);
      box-shadow: 0 rem(2) rem(4) rgba(0,0,0,0.2);
      content: attr(loading);
      padding: rem(6) rem(10);
      position: absolute;
      text-align: center;
      margin: 0 auto;
      left: 50%;
    }
  }

  .list-item {
    @include display(flex);

    &:first-child .meta-info {
      border-top: none;
    }
  }

  .avatar {
    @include flex-grow(1);
    min-width: rem(22);
    max-width: rem(72);

    &::before {
      background-color: beige; // TODO
      border-radius: 50%;
      content: "";
      display: block;
      margin-top: rem(16);
      padding-top: 75%;
      width: 75%;
    }
  }

  .meta-info {
    @include flex-grow(0);
    border-top: rem(1) solid #bdbdbd;
    padding-top: rem(16);
    width: 87%;
  }

  .from {
    display: block;
    font-weight: bolder;
  }

  .subject {
    color: silver;
    display: block;
  }
}

// Component: Message Content
cs-component.messagecontent {
  .subject {
    margin: 0;
  }

  .from,
  .to,
  .date {
    display: block;
  }
}

// Component: Authorization
cs-component.authorization {
  .authorizeContainer {
    background-color: rgba(0, 0, 0, 0.3);
    height: 100%;
    left: 0;
    position: fixed;
    text-align: center;
    top: 0;
    width: 100%;
  }

  .authorizeDialog {
    @include transform(translateY(-50%));

    background-color: white;
    border: 1px solid #bdbdbd;
    border-radius: 5px;
    box-shadow: 0 3px 3px 0 rgba(0,0,0,0.2);
    display: inline-block;
    margin: auto;
    padding: 1rem;
    position: relative;
    top: 50%;
  }

  .info {
    display: block;
    margin-bottom: 1rem;
  }

  button {
    background-color: #df4a32;
    border: none;
    border-radius: rem(2);
    box-shadow: 0 rem(3) rem(3) 0 rgba(0, 0, 0, 0.1);
    color: #fff;
    cursor: pointer;
    display: block;
    height: rem(40);
    margin: auto;
    padding: 0 rem(8);
    position: relative;

    &::before {
      border-left: rem(1) solid #be3f2b;
      content: "";
      height: inherit;
      left: rem(42);
      position: absolute;
      top: 0;
    }

    span,
    svg {
      display: inline-block;
      vertical-align: middle;
      color: white;
      fill: currentColor;
    }

    span {
      margin-left: rem(16);
    }
  }
}